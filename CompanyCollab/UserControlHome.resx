<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnLoad.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAB
        2AAAAdgB+lymcgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAQrSURBVHhe7ZtJ
        yx1FFIY/Mc5jNGBw6QguJGKi5A+YRIkIIvgPXDpFN4qCEBxAswhRTMSFmgExkEX2Ed0o6NaFOJE4JXFI
        EBxBfR6w4XBoPr/bXbfuDXVfeODSfW+fququ6nNOnbu00EILLTRlnQ23w6OwB96DL+An+BP++O/z5+C5
        12AbbIRVMKnugq/hGGzxwCx0LtwD78Bp+Gcgv8AhuA/Oh5XIjne/P+qBmroSnoGTEDtSgp/hBVgLyyn/
        roougu3gHcsNKM1vsAMugz7l709dd8NXkA1Hvof98CBsghtgNThV5Aq4Hu6Ah+BN+A76rtXxLdwPWfl7
        U5Nzchdkgx0/wk64DYboLFgHL8EJ6LMhb4BPYKd8fiq6Gj6GbEy+gYchNmqsfEoeABe1PpufwDWg8rni
        8lH1NZYN+UpzkSrZ8azz4An4HbJ9p8TN6ZgUlZ13Pmcjn8ItUEs3Qd8TqD+RjxWTj33fnfc9fSnU1gWw
        D3J7MkXkgtc34np2enqzkgvlc5DbFSmivtXeztuAeZBrT25fx2j5ns8X9bGvdec73z63YaWM0oWQnRwX
        vJpzPvr2Qxgl3dt4MV91NVd7NWYARgVDBjbZt3eu1ZYh7ZBBsPObYbCM6uIF9fCm6eTMlXQ9c0ire9uM
        TGbEzhvYNHP3lZmcOABGdc3IPNwpiAOwAZqRCczY+eMwLx5fFT0CcQDM5DQlffw4AKaxmtL7EAfAHF5T
        +hLiAFwLTekHiAOgS3wma+KdIreq4gDoFZ7JmninaOIfzLFMonZ9EZOp/6su+hodTc2B1kAcAOObpmQW
        Ow6ASd2mdCfEAXgXmpIhfByAV6EpvQ1xANx4bUYGcHlT9VZoRpbYxM67bTbLTZzqegXiAByAZnQJ5I3S
        rdCMHofYeZM650ATctcqb+E/BYM1dG9uxdFXYVlAFdthmZ71SIMVg6NJqR1Mmbz9C2IbnoZRiheblJoD
        cDlYbRrtfwYWUoxSvOAk1IwmTeUfhmj/byhiP140MouN0j7p8b0OuX2uBUWULxx5Fma5Z+Cd7+v8h1As
        k5UvntkLo+fZAFkqmx97cd5fBcWUDfSVon0Elq7Vkqt9XvDE8trroKiyEYsRLUrMx823PQkrLWsfIp0c
        53Z+1Yl3fiop/GxIacjy1HxO9Bssay2ZTb4YHgNd2j6bH0DRxz4qG+tkvYCFyvl8hwlI75Y1RUMWSn9j
        SPsy9E078VWnjamm7rPRLEvW+6ZERN/8LTBF1ZXLm7E1bW3j3Xy5EXSd3Zw1k7Nchbj4yFfxM7LhPjk3
        X4RfIX+/NPr2urfV3jy5AcvJefg8+PeW/LuxOP+N6kYFNkM0ZKfIN8G9cBDG/GnKuW8mx2TGzOL5sTtF
        emvd3+Z2g7l53+EWXrkPKX722BEwdW32dj00lcNbaKGFamtp6V+WNdeWiNu7wwAAAABJRU5ErkJggg==
</value>
  </data>
</root>